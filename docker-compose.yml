version: '3.8'

services:
  samplemind-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: samplemind-api
    ports:
      - "8000:8000"
    environment:
      - SAMPLEMIND_ENV=development
      - MONGODB_URL=mongodb://mongodb:27017/samplemind
      - REDIS_URL=redis://redis:6379/0
      - OLLAMA_HOST=http://ollama:11434
    volumes:
      - ./src:/app/src:cached
      - ./data:/data
    depends_on:
      - mongodb
      - redis
      - ollama
    networks:
      - samplemind-network
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    container_name: samplemind-ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ollama_models:/root/.ollama
    networks:
      - samplemind-network
    restart: unless-stopped

  mongodb:
    image: mongo:7.0
    container_name: samplemind-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=samplemind
    volumes:
      - mongodb_data:/data/db
    networks:
      - samplemind-network
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    container_name: samplemind-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 1gb
    volumes:
      - redis_data:/data
    networks:
      - samplemind-network
    restart: unless-stopped

  chromadb:
    image: chromadb/chroma:latest
    container_name: samplemind-chromadb
    ports:
      - "8002:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    networks:
      - samplemind-network
    restart: unless-stopped

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: samplemind-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - samplemind-network
    restart: unless-stopped
    depends_on:
      - postgres

  grafana:
    image: grafana/grafana:latest
    container_name: samplemind-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=samplemind
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - samplemind-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # PostgreSQL Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: samplemind-postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - samplemind-network
    restart: unless-stopped
    depends_on:
      - postgres

  postgres:
    image: ankane/pgvector:latest
    container_name: samplemind-postgres
    environment:
      POSTGRES_USER: samplemind
      POSTGRES_PASSWORD: samplemind123
      POSTGRES_DB: samplemind
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb.d:/docker-entrypoint-initdb.d
    networks:
      - samplemind-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U samplemind -d samplemind"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  samplemind-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
  ollama_models:
  postgres_data:
  chromadb_data:
