# =============================================================================
# SampleMind AI - ConfigMap
# Non-sensitive application configuration
# =============================================================================

apiVersion: v1
kind: ConfigMap
metadata:
  name: samplemind-config
  namespace: samplemind-production
  labels:
    app: samplemind
    component: config
    version: "1.0"
data:
  # Application Environment
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "info"
  
  # Feature Flags
  BATCH_PROCESSING: "true"
  FL_STUDIO_INTEGRATION: "true"
  REAL_TIME_ANALYSIS: "true"
  STREAMING_ENABLED: "true"
  AI_CACHE_ENABLED: "true"
  CACHE_ENABLED: "true"
  ENABLE_COST_OPTIMIZATION: "true"
  
  # AI Configuration
  DEFAULT_MODEL: "gemini-2.5-pro"
  MUSIC_MODEL: "gemini-2.5-pro"
  MAX_TOKENS: "8192"
  TEMPERATURE: "0.7"
  PRIMARY_API: "google_ai"
  SPECIALIST_API: "anthropic"
  FALLBACK_API: "openai"
  API_ROTATION_ENABLED: "false"
  INTELLIGENT_ROUTING: "true"
  
  # Cache Configuration
  AI_CACHE_BACKEND: "redis"
  AI_CACHE_TTL_HOURS: "168"
  
  # File Upload Settings
  MAX_FILE_SIZE_MB: "100"
  ALLOWED_AUDIO_FORMATS: "wav,mp3,flac,aiff,m4a,ogg,opus"
  
  # Rate Limiting
  MAX_REQUESTS_PER_MINUTE: "60"
  
  # Database URLs (non-sensitive parts)
  MONGODB_HOST: "mongodb-service"
  MONGODB_PORT: "27017"
  MONGODB_DATABASE: "samplemind"
  
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  CHROMADB_HOST: "chromadb-service"
  CHROMADB_PORT: "8000"
  
  # Celery Configuration
  CELERY_LOG_LEVEL: "info"
  CELERY_WORKER_CONCURRENCY: "4"
  CELERY_WORKER_MAX_TASKS_PER_CHILD: "1000"
  CELERY_TASK_TIME_LIMIT: "3600"
  CELERY_TASK_SOFT_TIME_LIMIT: "3300"
  
  # Backend Configuration
  WORKERS: "4"
  WORKER_CLASS: "uvicorn.workers.UvicornWorker"
  WORKER_CONNECTIONS: "1000"
  KEEPALIVE: "5"
  
  # JWT Configuration
  JWT_ALGORITHM: "HS256"
  ACCESS_TOKEN_EXPIRE_MINUTES: "30"
  REFRESH_TOKEN_EXPIRE_DAYS: "7"
  
  # Monitoring
  METRICS_ENABLED: "true"
  TRACING_ENABLED: "true"
  PROMETHEUS_PORT: "9090"
  JAEGER_AGENT_HOST: "jaeger-agent"
  JAEGER_AGENT_PORT: "6831"
  
  # CORS Settings
  CORS_ORIGINS: "https://samplemind.ai,https://app.samplemind.ai"
  CORS_ALLOW_CREDENTIALS: "true"
  CORS_ALLOW_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
  
---
# Backend-specific ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: samplemind-production
  labels:
    app: samplemind
    component: backend
data:
  # API Server Configuration
  HOST: "0.0.0.0"
  PORT: "8000"
  RELOAD: "false"
  
  # Performance Tuning
  WORKERS: "4"
  WORKER_CLASS: "uvicorn.workers.UvicornWorker"
  WORKER_CONNECTIONS: "1000"
  KEEPALIVE: "5"
  TIMEOUT: "120"
  GRACEFUL_TIMEOUT: "30"
  
  # Health Check Endpoints
  HEALTH_CHECK_PATH: "/api/v1/health"
  LIVENESS_PATH: "/api/v1/health/live"
  READINESS_PATH: "/api/v1/health/ready"
  
---
# Celery-specific ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: celery-config
  namespace: samplemind-production
  labels:
    app: samplemind
    component: celery
data:
  # Worker Configuration
  CELERY_WORKER_CONCURRENCY: "4"
  CELERY_WORKER_PREFETCH_MULTIPLIER: "4"
  CELERY_WORKER_MAX_TASKS_PER_CHILD: "1000"
  CELERY_WORKER_MAX_MEMORY_PER_CHILD: "300000"
  
  # Task Configuration
  CELERY_TASK_ACKS_LATE: "true"
  CELERY_TASK_REJECT_ON_WORKER_LOST: "true"
  CELERY_TASK_TIME_LIMIT: "3600"
  CELERY_TASK_SOFT_TIME_LIMIT: "3300"
  CELERY_TASK_DEFAULT_QUEUE: "default"
  
  # Queue Configuration
  CELERY_QUEUES: "default,audio_processing,ai_analysis,embeddings,priority"
  
  # Result Backend Configuration
  CELERY_RESULT_EXPIRES: "3600"
  CELERY_RESULT_PERSISTENT: "true"
  
  # Beat Schedule Configuration
  CELERY_BEAT_SCHEDULE_FILENAME: "celerybeat-schedule.db"
  CELERY_BEAT_MAX_LOOP_INTERVAL: "60"
  
---
# Frontend-specific ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: samplemind-production
  labels:
    app: samplemind
    component: frontend
data:
  NODE_ENV: "production"
  VITE_API_URL: "https://api.samplemind.ai"
  VITE_WS_URL: "wss://api.samplemind.ai"
  
---
# Nginx Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: samplemind-production
  labels:
    app: samplemind
    component: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 2048;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        
        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 100m;
        
        # Gzip
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript 
                   application/json application/javascript application/xml+rss 
                   application/rss+xml font/truetype font/opentype 
                   application/vnd.ms-fontobject image/svg+xml;
        
        # Rate Limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/s;
        
        # Upstream Backend
        upstream backend {
            least_conn;
            server backend-service:8000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        # Upstream Frontend
        upstream frontend {
            least_conn;
            server frontend-service:3000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        # Server Block
        server {
            listen 80;
            server_name _;
            
            # Security Headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            
            # Health Check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # API Proxy
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 120s;
            }
            
            # Upload Endpoint
            location /api/v1/upload {
                limit_req zone=upload burst=10 nodelay;
                
                proxy_pass http://backend;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                
                proxy_request_buffering off;
                proxy_connect_timeout 300s;
                proxy_send_timeout 300s;
                proxy_read_timeout 300s;
            }
            
            # Frontend Proxy
            location / {
                proxy_pass http://frontend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }