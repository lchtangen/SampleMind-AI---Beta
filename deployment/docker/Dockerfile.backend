# =============================================================================
# STAGE 1: Builder Stage
# =============================================================================
FROM python:3.12-slim as builder

LABEL maintainer="SampleMind AI <team@samplemind.ai>"
LABEL description="SampleMind AI Backend - Builder Stage"

# Set working directory
WORKDIR /app

# Install build dependencies only
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    libsndfile1-dev \
    ffmpeg \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy only requirements first for better layer caching
COPY requirements.txt .

# Install Python dependencies in a virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install dependencies with optimizations
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    # Remove unnecessary files to reduce size
    find /opt/venv -type d -name __pycache__ -exec rm -rf {} + && \
    find /opt/venv -type f -name "*.pyc" -delete && \
    find /opt/venv -type f -name "*.pyo" -delete

# =============================================================================
# STAGE 2: Runtime Stage
# =============================================================================
FROM python:3.12-slim

LABEL maintainer="SampleMind AI <team@samplemind.ai>"
LABEL description="SampleMind AI v1.0.0 Phoenix Beta - Backend API"
LABEL version="1.0.0-phoenix-beta"

# Set working directory
WORKDIR /app

# Install only runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libsndfile1 \
    ffmpeg \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Set environment variables
ENV PATH="/opt/venv/bin:$PATH" \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONOPTIMIZE=2 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Create non-root user and group for security
RUN groupadd -r -g 1000 samplemind && \
    useradd -r -u 1000 -g samplemind -m -s /bin/bash samplemind && \
    mkdir -p /app/data /app/logs /app/cache && \
    chown -R samplemind:samplemind /app

# Copy application code (after user creation)
COPY --chown=samplemind:samplemind src/ /app/src/
COPY --chown=samplemind:samplemind config/ /app/config/
COPY --chown=samplemind:samplemind pyproject.toml /app/
COPY --chown=samplemind:samplemind README.md /app/

# Switch to non-root user
USER samplemind

# Expose port
EXPOSE 8000

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/health || exit 1

# Add labels for better container management
LABEL org.opencontainers.image.source="https://github.com/lchtangen/SampleMind-AI---Beta"
LABEL org.opencontainers.image.documentation="https://docs.samplemind.ai"
LABEL org.opencontainers.image.licenses="MIT"

# Run application with proper signal handling
CMD ["uvicorn", "src.samplemind.interfaces.api.main:app", \
    "--host", "0.0.0.0", \
    "--port", "8000", \
    "--workers", "4", \
    "--loop", "uvloop", \
    "--http", "httptools", \
    "--log-level", "info", \
    "--access-log", \
    "--use-colors"]
