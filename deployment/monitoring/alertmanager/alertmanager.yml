# AlertManager Configuration for SampleMind AI
# Handles alert routing, grouping, and notifications

global:
  # Global SMTP configuration for email alerts
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'alerts@samplemind.ai'
  smtp_auth_username: 'alerts@samplemind.ai'
  smtp_auth_password: '${SMTP_PASSWORD}'
  smtp_require_tls: true
  
  # PagerDuty integration key (set via environment variable)
  pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'
  
  # Slack webhook URL (set via environment variable)
  slack_api_url: '${SLACK_WEBHOOK_URL}'
  
  # HTTP configuration
  http_config:
    follow_redirects: true

# Templates for alert notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Route configuration - determines how alerts are routed to receivers
route:
  # Default receiver for all alerts
  receiver: 'default'
  
  # Group alerts by these labels
  group_by: ['alertname', 'cluster', 'service', 'severity']
  
  # How long to wait before sending the first notification
  group_wait: 10s
  
  # How long to wait before sending notification about new alerts added to a group
  group_interval: 10s
  
  # How long to wait before re-sending a given alert
  repeat_interval: 12h
  
  # Child routes for specific alert routing
  routes:
    # Critical alerts - send to PagerDuty, Slack, and Email
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 5s
      group_interval: 5s
      repeat_interval: 4h
      continue: false
      
    # Warning alerts - send to Slack and Email
    - match:
        severity: warning
      receiver: 'warning-alerts'
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 24h
      continue: false
    
    # Database alerts - specific team notification
    - match_re:
        component: 'database|cache'
      receiver: 'database-team'
      group_wait: 15s
      group_interval: 5m
      repeat_interval: 12h
      continue: true
    
    # ML/GPU alerts - ML ops team notification
    - match:
        component: 'ml'
      receiver: 'ml-ops-team'
      group_wait: 15s
      group_interval: 5m
      repeat_interval: 12h
      continue: true
    
    # Infrastructure alerts - DevOps team
    - match:
        component: 'infrastructure'
      receiver: 'devops-team'
      group_wait: 15s
      group_interval: 5m
      repeat_interval: 12h
      continue: true
    
    # Security alerts - Security team
    - match:
        team: 'security'
      receiver: 'security-team'
      group_wait: 5s
      group_interval: 1m
      repeat_interval: 6h
      continue: false

# Inhibition rules - suppress certain alerts when others are firing
inhibit_rules:
  # Inhibit warning alerts if critical alert for same service is firing
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']
  
  # Inhibit specific alerts if service is completely down
  - source_match:
      alertname: 'ServiceDown'
    target_match_re:
      alertname: '.*'
    equal: ['service', 'instance']
  
  # Inhibit high error rate alert if API is completely down
  - source_match:
      alertname: 'APICompleteOutage'
    target_match:
      alertname: 'HighAPIErrorRate'
    equal: ['cluster']
  
  # Inhibit connection exhausted warning if connections are actually exhausted (critical)
  - source_match:
      alertname: 'DatabaseConnectionsExhausted'
    target_match:
      alertname: 'HighDatabaseConnectionUsage'
    equal: ['instance']
  
  # Inhibit individual worker alerts if all workers are down
  - source_match:
      alertname: 'CeleryWorkersDown'
    target_match_re:
      alertname: 'HighQueueDepth|HighTaskFailureRate'
    equal: ['cluster']

# Receivers - define how to send notifications
receivers:
  # Default receiver
  - name: 'default'
    email_configs:
      - to: 'devops@samplemind.ai'
        headers:
          Subject: '[SampleMind] Alert: {{ .GroupLabels.alertname }}'
        html: '{{ template "email.default.html" . }}'

  # Critical alerts - PagerDuty + Slack + Email
  - name: 'critical-alerts'
    pagerduty_configs:
      - service_key: '${PAGERDUTY_SERVICE_KEY}'
        severity: 'critical'
        description: '{{ .GroupLabels.alertname }}: {{ .CommonAnnotations.summary }}'
        details:
          firing: '{{ .Alerts.Firing | len }}'
          resolved: '{{ .Alerts.Resolved | len }}'
          description: '{{ .CommonAnnotations.description }}'
          runbook: '{{ .CommonAnnotations.runbook }}'
        client: 'SampleMind AlertManager'
        client_url: 'https://grafana.samplemind.ai'
    
    slack_configs:
      - channel: '#alerts-critical'
        username: 'SampleMind AlertManager'
        icon_emoji: ':fire:'
        color: 'danger'
        title: 'üö® CRITICAL: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Labels.alertname }}
          *Severity:* {{ .Labels.severity }}
          *Component:* {{ .Labels.component }}
          *Summary:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Impact:* {{ .Annotations.impact }}
          *Action:* {{ .Annotations.action }}
          *Dashboard:* {{ .Annotations.dashboard }}
          *Runbook:* {{ .Annotations.runbook }}
          {{ end }}
        send_resolved: true
    
    email_configs:
      - to: 'oncall@samplemind.ai,devops@samplemind.ai'
        headers:
          Subject: 'üö® [CRITICAL] {{ .GroupLabels.alertname }}'
          Priority: 'urgent'
        html: '{{ template "email.critical.html" . }}'

  # Warning alerts - Slack + Email
  - name: 'warning-alerts'
    slack_configs:
      - channel: '#alerts-warning'
        username: 'SampleMind AlertManager'
        icon_emoji: ':warning:'
        color: 'warning'
        title: '‚ö†Ô∏è WARNING: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Labels.alertname }}
          *Severity:* {{ .Labels.severity }}
          *Component:* {{ .Labels.component }}
          *Summary:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Dashboard:* {{ .Annotations.dashboard }}
          {{ end }}
        send_resolved: true
    
    email_configs:
      - to: 'devops@samplemind.ai'
        headers:
          Subject: '‚ö†Ô∏è [WARNING] {{ .GroupLabels.alertname }}'
        html: '{{ template "email.warning.html" . }}'

  # Database team alerts
  - name: 'database-team'
    slack_configs:
      - channel: '#team-database'
        username: 'SampleMind AlertManager'
        icon_emoji: ':database:'
        title: '{{ .GroupLabels.severity | toUpper }}: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Labels.alertname }}
          *Summary:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Dashboard:* {{ .Annotations.dashboard }}
          {{ end }}
        send_resolved: true
    
    email_configs:
      - to: 'database-team@samplemind.ai'
        headers:
          Subject: '[Database] {{ .GroupLabels.alertname }}'
        html: '{{ template "email.default.html" . }}'

  # ML Ops team alerts
  - name: 'ml-ops-team'
    slack_configs:
      - channel: '#team-ml-ops'
        username: 'SampleMind AlertManager'
        icon_emoji: ':robot_face:'
        title: '{{ .GroupLabels.severity | toUpper }}: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Labels.alertname }}
          *Model:* {{ .Labels.model_name }}
          *Summary:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Dashboard:* {{ .Annotations.dashboard }}
          {{ end }}
        send_resolved: true
    
    email_configs:
      - to: 'ml-ops@samplemind.ai'
        headers:
          Subject: '[ML/GPU] {{ .GroupLabels.alertname }}'
        html: '{{ template "email.default.html" . }}'

  # DevOps team alerts
  - name: 'devops-team'
    slack_configs:
      - channel: '#team-devops'
        username: 'SampleMind AlertManager'
        icon_emoji: ':gear:'
        title: '{{ .GroupLabels.severity | toUpper }}: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Labels.alertname }}
          *Instance:* {{ .Labels.instance }}
          *Summary:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Dashboard:* {{ .Annotations.dashboard }}
          {{ end }}
        send_resolved: true
    
    email_configs:
      - to: 'devops@samplemind.ai'
        headers:
          Subject: '[Infrastructure] {{ .GroupLabels.alertname }}'
        html: '{{ template "email.default.html" . }}'

  # Security team alerts
  - name: 'security-team'
    slack_configs:
      - channel: '#team-security'
        username: 'SampleMind AlertManager'
        icon_emoji: ':shield:'
        color: 'danger'
        title: 'üîí SECURITY: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Labels.alertname }}
          *Severity:* {{ .Labels.severity }}
          *Summary:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Action:* {{ .Annotations.action }}
          *Dashboard:* {{ .Annotations.dashboard }}
          {{ end }}
        send_resolved: true
    
    email_configs:
      - to: 'security@samplemind.ai,oncall@samplemind.ai'
        headers:
          Subject: 'üîí [SECURITY] {{ .GroupLabels.alertname }}'
          Priority: 'urgent'
        html: '{{ template "email.security.html" . }}'

# Time-based muting/silencing (optional)
# Silences can be managed via the AlertManager UI or API
time_intervals:
  - name: 'business-hours'
    time_intervals:
      - times:
          - start_time: '09:00'
            end_time: '17:00'
        weekdays: ['monday:friday']
  
  - name: 'off-hours'
    time_intervals:
      - times:
          - start_time: '17:00'
            end_time: '09:00'
        weekdays: ['monday:friday']
      - weekdays: ['saturday', 'sunday']